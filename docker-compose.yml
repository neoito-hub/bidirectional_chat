version: "3.8"
services:
  postgres:
    image: postgres:latest
    container_name: bidirectional_chat_postgres_container
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - ./volume/pg-data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test:
        [
          "CMD",
          "pg_isready",
          "-h",
          "localhost",
          "-p",
          "5432",
          "-q",
          "-U",
          "postgres",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  redis:
    image: redis:latest
    container_name: bidirectional_chat_redis_container
    ports:
      - "6378:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5
  centrifugo:
    container_name: centrifugo
    image: centrifugo/centrifugo:v5
    volumes:
      - ./config.json:/centrifugo/config.json
    command: centrifugo -c config.json
    ports:
      - 8000:8000
    ulimits:
      nofile:
        soft: 65535
        hard: 65535
  shield-go-app:
    build: ./shield
    container_name: bidirectional_chat_shield_app_container
    ports:
      - "8080:8080"
      - "8010:8010"
      - "8011:8011"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -c "go run ./migrator/main.go && go run ./main.go ./packages.go"
  backend-app:
    build:
      context: ./backend
      # target: dev
      dockerfile: Dockerfile
    container_name: bidirectional_chat_backend_app_container
    ports:
      - "5000:5000"
      - "5001:5001"
      - "5002:5002"
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: bash -c "bb start && npx prisma db push --schema=./shared/prisma/schema.prisma &&  npx prisma db seed --schema=./shared/prisma/schema.prisma && bb log"
  # frontend-app:
  #   build:
  #     context: ./frontend
  #     # target: dev
  #     dockerfile: Dockerfile
  #   container_name: frontend_container
  #   ports:
  #     - "3010:80"
